<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAygzIAMI0vBiGvIS0mlCUOILAeKiKeIREWwBYtGbUaMCaoJTEbuBoyFr0WLxq1
        GigVvhUzHascIhW7FTUlnyUvJaIlLxbAFTckqiQiFMATNxymGyATvxQ2H6geIhW/FDUWsxYcF/8YAA8y
        DwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgfCAAIIAfDA3ODagOtQ4/DcwMmQy6CmAWwRW4F8kW2hyq
        HI8Xuha0EckR3Ba3FcUQzA/ZG7Yb0Q7MDusarRqbGLcXsA7UDeIYwhfOC9kK2Ba8FdENzg3eEMsPwQzQ
        C9sNzA2UQwBFAy5bLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKowoADHQMCQrICo8KxgmGCsMJfgjI
        CKUSxxDOFsgVyQeHBxkWqRWEEMgQ6hK+ENIUyBTmE8UT2grUCusHvgdLCcUJeArYCfUPxA/SCN0I6Bi+
        F+4OzA74EMcQzwnRCfETuxKhXQBgAzJbMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZ/9wAJL/rwBt/2oCELIPKQrO
        CoMKxQmQCsgJhArQCYcOywyPFcQTdRqsGBIQyA9uD8oOjA7DDYETwxKNDb0Mbw3TDJARuhAmD8MNQw3T
        C5MSwRFsC9ULjxO9EnAPyg2WF7YXcA3MDJIUthNYStpHBDX/MQE2/jIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA+fn5APT09A75+fky+/v7QO3t7T/Nzc0ly8vLB4B/fQBkYl8LZWViW1JTUH1LTElBODk2KzSS
        PAIf0h87G+UZURnTF1YZ3xdQGdUWVRnSFlUZ5hdNGMwWWRrtF0wb1BhUGuAXTxrdGFAb9RhJG+cYTBnL
        F1ga7RdLG9QZVRrcF1Aa2RdRG9UZVBzpGUwa4BdPGOYVTBjUFlMZ4hdPGsgZV4zUjDDx7vE+/Pz8QPn5
        +TL19fUO+vr6AAAAAADe3t4A////APr6+nD9/f3v/v7+9enp6fTMzMzizc3NrbS0tGWdnZyfjY2J93Z2
        cv9ZWlfyTE1LtLO0szUVHhVdFSkVRg8YD6EvPS9hDhoOaRIiElYhMyFLAg0CgjVLNT8FDwWIJjYmUxMg
        E2cOJw41FykXSAQNBIgvRC89BA4EiDNCM1sfKh97BhIGcwAbACoiMyJTJTQlVRYjFmFIVkhgBxAHi6an
        prXo6Oj1/v7+9f39/e/6+vpy////AOTk5ADw8PAA5+fnBPz8/Kj//////////+Hh4f/Ly8v/zc3N/6en
        p/yrq7H+ysrM/7q6t/9gX13/YV9g+6qoqt9jYmOphoSGqVVSVfF6d3rGV1ZXuGdkZ52BfYGyNjM3s4WD
        has3NTe/eHR4qVNQU71UU1S/fXp9rj88P76NjI2sPjs+yH56fsVoZmjGYF9gpnNwc3JeWl6ubWlts1RQ
        VKl2cna+MS4xuoaFhtfJycn//Pz8///////9/f2r6+vrBPHx8QDo6OgA6OjoFPHx8c/w8PD/7u7u/9ra
        2v/Nzc3/zMzM/4+Qjv9aW1v/zM3O/8DCvP9lk2P/UI5P/2ehaP2Nno30m7eb+XOwc/5lomX7f6F//Yau
        hvptrG37YJ1g+XyXfPiDpoT1aqtq82SfZPqHnof+hbCE/G6jbvyNoo75dq11/GekZ/5zoHP6pKik9Ju4
        mu5opmj2Y6Fj+GKfYvxfnV/6WpNa/W2Cbfyfn5//4uLi//Dw8P/x8fHQ6urqFenp6QDOzs4Azs7OMM/P
        z+vNzc3/0dHR//Dw8P/v7+//29zb/5iYlf93d3P/rayp/5KUjv9EyUH/DeoG/w/VCP9uoW3/Z8Nl/w/n
        CP8K3QP/W65a/1vPWP8M6AX/DNoG/1mgWf9cwFr/D+gH/w7VCP9npmb/PdU5/xbKEf9xqnH/Kd8k/wnl
        Af8zuDD/kqST/0PUPv8L5QT/DOQF/w7lCP8O5wb/DOAF/0KqQP+fop//wMDA/87Ozv/Pz8/szs7OMc7O
        zgDMzMwAy8vLVsvLy/vLy8v/1tbW//v7+///////9fX1/66uq/+VlY//nJyX/4eGhf9TvU7/F+QG/xPR
        A/9fml7/Wb9T/xXiBP8S0QP/bKlq/2DOWv8U4gL/EtMC/1ibVv9dvFj/F+MF/xTNBf9hqF//NNcn/xTK
        Bv9jq2D/Mdsk/xDfAP8zryv/gpmC/znZLf8S4QD/G8gP/1DLS/8g4w//Ed4A/zatL/+lqqX/w8PD/8vL
        y//Ly8v8y8vLWMzMzADS0tIAz8/Pg9LS0v/T09P/3d3d//n5+f//////7/Dw/8HCwP+FhYH/gYJ9/4KC
        gv9+xXf/JcUK/xy5Af85miz/N68n/x7CAv8fsAj/f6Z+/2bFXP8fwwL/G7YC/1mWVv9gtFn/IcUG/x2x
        Bf9frVv/MsUb/xu1Af9YqlP/Osgl/xu/AP83oCv/gZiB/0DFLf8cwQD/KaUX/22sav8sxxP/G74A/zue
        L/+jqqT/ysrK/9PT0//S0tL/0NDQhdLS0gDq6uoH9PT0rvf39//5+fn/3t7e/9XV1f/l5eX/4eHh/72+
        vP93eHX/b3Bt/5ycnv+n1qD/MqwP/yiiAf8lnwL/KKID/yijAf8slRD/i6OK/2y7Xv8ppgL/JJsC/1uR
        Vv9kq1n/K6kG/yeYBv9csFL/MqsQ/yWdAP9PpEH/RLYn/yWhAP8+kyz/gZqB/0SxKP8logD/LpAW/26p
        af81rhT/JaAA/z2OLf+OlI7/zczN//n5+f/39/f/9PT0r+7u7gf29vYb/v7+0//////8/Pz/19fX/8vL
        y//MzMz/4+Pj/8jJx/9ub2v/aWtn/8rKy//Q7Mv/RJkb/y+BAP9Eki3/SqIq/zGEAP83gBn/iZmJ/3Cv
        Xf8yiAL/LX8C/12MVv9ooln/NYsF/y9+B/9Mnzr/NosJ/zCCAP89iyb/Q5wf/y+CAP9DhC3/jKOL/1yu
        Qv9EmR//SpMz/3Claf86jxD/L4IA/0F/LP+OlY7/ycjJ//z8/P///////f391fb29h7y8vI99vb27PT0
        9P/v7+//0tLS/8vLy//Ozs7/9PT0/8jIxv9BQT3/WltZ/+jn6P/i89//Tokl/zBiAP9Rhj3/UY8y/zFk
        AP9BcSb/lqCX/3SmX/8zaQD/MGQB/2KLWv9rnFz/NWwC/zBkA/8xehX/NWoC/zRmAP8uaw3/NXcN/zJk
        AP9BdSr/k56U/7fGtf+btpj/cp1q/0d7Lf8zZwH/MGMA/059O/+lqqb/y8vL/+/v7//09PT/9vb27vLy
        8kDR0dFr0dHR+8/Pz//Y2Nj/8PDw/9/f3//Q0ND/+vr6/7Ozsv81NjL/X2Fg/6+vr/++yr//V4c0/y9U
        AP9CeCr/RXsi/y9UAP9IcDP/o6ul/3ekYv8xWQD/LlcA/2eOYP9wm2D/MlwB/zJXAP8vWAH/MVoC/zVi
        Bv8wVwH/MFkB/zFWAP9Bbir/iZSK/4Sgff9Gbiz/MVgH/y9UAP80Xgf/R3cq/4Oef//Gxsb/6+vr/9nZ
        2f/Pz8//0dHR+9HR0W3MzMyfzMzM/8vLy//f39///////+bm5v/Dw8H/6eno/8LBwP9XVlP/UlFO/09P
        Tf9yfHr/U344/zFLAP8vYRL/NWUO/y9JAP9YeUj/paqn/3GZXf8xTgD/LkwA/2mNYf9xmGH/MlEB/zJN
        AP8yTAD/N10U/0yDLv8zTgD/Mk0A/zBLAP9CaCv/gpaC/0huKP8vSgD/MU4C/0x2MP9xmWj/eo56/42V
        jv++v77/8fHx/+Dg4P/Ly8v/zMzM/8zMzKLMzMy+zMzM4MzMzNno6Ojo/f39/NTU0/+hoJ3/zMzK/7q5
        t/9gX1v/UE9L/1FTUf9yen3/V3hB/zNDAP8sRgL/MEcC/y9AAP9mglv/paim/3CTW/8xQgD/LkIA/2mL
        Yf9xlGL/M0YB/zJBAP8xPwD/R2Ur/2uWWP8zRQH/MkEA/zA/AP9EZC3/kKWO/0tlJP8xPwD/Nk0S/3ae
        cP9ObTf/P1Yk/1Z1Sv+pr6r/6+rr/Onp6ejMzMzZzMzM4MzMzMLMzMwszMzMIMvLyxrv7+8s8PDwbsTE
        w+l5eXf/0NDP/6OjoP9bWlb/Tk1J/1lbW/94fYL/a4Za/zM7Af8yNgD/MjYA/y85A/9whmn/qKqq/3GQ
        Xf8wNwD/LTcA/2mKYf9xkGH/MToA/zI3AP8vNAD/Umo9/3mYbf81QAX/MTYA/y80AP9FYC7/laqU/0le
        JP8wMwD/N0kX/3GXav84SAz/LTEA/0ZcMf+mrKf929vbjPLy8ivMzMwazMzMIMzMzC4AAAAAAAAAAAAA
        AACZm5sAoaKjH7W3t92lp6b/0NHR/3d5eP9NTkz/R0dE/15hY/+AhIn/j6eC/zI6BP8wMQD/MDAA/y86
        Cf98j3j/xcfG/3mWZv8tMAD/LDIA/2mIYf9vjmD/LzUA/zAxAP8tMAD/YXlT/4ifgv83Qwz/MDAA/y4u
        AP9FXS7/lauU/0ZaI/8uLQD/NUMV/26VZ/83Qwz/LS0A/0tbNf+rsKz2zs3PRMzMzAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACys7MArrCwPri5uvO6u7v/xMXF/2ZoZ/9HSkn/QEJB/1FWV/9xdHf/obWZ/zVA
        Cv8tLgD/LS0A/zJAEv+XppX/5OXl/4Cdbf8rLgD/KjAA/2+PaP91k2b/LTIA/y4vAP8qMAH/epBy/6m5
        pv9AURn/LS0A/ywsAP9EXC7/lquV/0heJf8uLgD/LzYG/zxVIv8wNQP/LS0A/1JlPv+9w77Y2NbYItXV
        1QAAAAAAAAAAAAAAAAAAAAAAAAAAAE5QTADKycgAurm4XMXGxP29vbv/t7e0/3p7eP9bXVr/SEpI/1ld
        YP92eHv/scCt/1RtNP9JWST/SVkk/1VvPf/F0MX/9fb2/5OyhP9GWCD/R1sk/5e2kP+Zt43/SV0k/0hY
        I/9JXir/rcCp/9be1f9lgUv/SVkk/0lZI/9dfUz/rruv/3uWZ/o0RArcLzsC1S05AdYvPAPWLj8E1XGQ
        Zb/X3dhR//7/AODg4AAAAAAAAAAAAAAAAAAAAAAAAAAAAFteWQCamZUAmpmVHpqZlZOamZXXn56a9aOi
        n/6fnpr/jY2J/31/f/+Iior+yszJ/8XQw//h7N//5fDj/97o3P/b3dv/4ODg/8/Xzv/Dz8H/09/R/8fP
        x//V3NT/2uXX/8DKvf+ksKP/w8fD/9na2f/a5Nn/3ejb/9fj1f/By8D/wsPC/8fMxu2ZsZJOEj4AIida
        EB4iQRQwJkUePqjepgz///8B8ejvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcnBsAGVk
        YAN6eHUbf315Q4mIhGeenZqGnp2Zm5KRjY6mpqR6zMzM0tva2/79/f3///////Pz8//Ozs7/y8vL/8vL
        y//a2dr/09LT/4iIiP+ZmJn/oqGi/3l4ef+DgoP/c3Nz/4aGhviJiIncdXR11Xt6e9KXlpf1enp63KWk
        pWlaWFshDAsNbQwLDVQWFRZeIiEihxwaHRAaGBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBfnkAh4N+AXBsZQDX2NkAx8fHIeXl5X38/PzM/v7+9Onp
        6f/MzMz/zMzM/8vLy//g4OD/9/f3/5GRkf+FhYX/vLy8/7e3t/+vr6//p6en/66urvlycnJ0DAwMMCQk
        JDRiYmJMSUlJOgICAg0REREWExMThRwcHHQODg5IDg4OLgsLCwoMDAwAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6urqAODg
        4AH19fUV+vr6RN/f33PLy8uEzMzMd8zMzK3q6ur2/v7+9dfX1/Wrq6v1xsbG9ezs7PbOzs6vz8/PeM7O
        zoXHx8c+ycnJAPX19QAAAAAAAAAAAAcHBwAGBgYGCQkJMwgICEcJCQkwMDAwASQkJAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA09PTANDQ0Brw8PA9////Pf///z3///89////PfDw
        8D3Q0NAb1NTUAP///wD///8A////AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP//
        /////wAA//8AAAD/AAD//wAAAH8AAP//AAAAfwAA//4AAAA/AADAgAAAAAMAAMAAAAAAAwAAgAAAAAAB
        AACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAAAPAADwAAAAAA8AAPAAAAAAHwAA8AAAAAAf
        AAD4AAAAAD8AAP/YAAAAPwAA//wAAfB/AAD///AP//8AAP///////wAA////////AAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>